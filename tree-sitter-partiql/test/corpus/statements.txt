==================
Return comment and multi-lines comment
==================
-- comment
/* multi
   line
   comment */
-------------------------------
(source_file
    (states
    (comment
        (comment_line)))
    (states
    (whitespace))
    (states
    (comment
        (comment_multi
        (comment_punc_start)
        (comment_punc_end)))))
==================
Return query with inline comment
==================
SELECT "a", b, c FROM stuff s INNER CROSS JOIN @s WHERE f(s)  -- comment
-- comment
-------------------------------
    (source_file
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (comment
          (comment_line)))
      (states
        (whitespace))
      (states
        (comment
          (comment_line))))
==================
Return query with subquery
==================
SELECT VALUE {'sensor': s.sensor,
              'readings': (SELECT VALUE l.co
                           FROM logs as l
                           WHERE l.sensor = s.sensor
                          )
             }
FROM sensors AS s
-------------------------------
    (source_file
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (tuple_value
            (tuple_punc_start)
            (colon_pair_list
              (colon_pair
                (value
                  (scalar_value
                    (string)))
                (pair_punc_separator)
                (value_list
                  (value
                    (scalar_value
                      (variable)))))
              (tuple_punc_separator)
              (colon_pair
                (value
                  (scalar_value
                    (string)))
                (pair_punc_separator)
                (value_list
                  (value
                    (scalar_value
                      (operator
                        (punctuation))))
                  (value
                    (scalar_value
                      (keywords
                        (keyword))))
                  (value
                    (scalar_value
                      (keywords
                        (keyword))))
                  (value
                    (scalar_value
                      (variable)))
                  (value
                    (scalar_value
                      (keywords
                        (keyword))))
                  (value
                    (scalar_value
                      (variable)))
                  (value
                    (scalar_value
                      (keywords
                        (keyword))))
                  (value
                    (scalar_value
                      (variable)))
                  (value
                    (scalar_value
                      (keywords
                        (keyword))))
                  (value
                    (scalar_value
                      (variable)))
                  (value
                    (scalar_value
                      (operator)))
                  (value
                    (scalar_value
                      (variable)))
                  (value
                    (scalar_value
                      (operator
                        (punctuation)))))))
            (tuple_punc_end))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable)))))
==================
Return query with ion embedded
==================
-- NOTE: the embedded ion values parse as ion (inside the backticks "`")
SELECT x.*
FROM `[{'a':1, 'b':1}, {'a':2}, "foo"]` AS x
-------------------------------
    (source_file
      (states
        (comment
          (comment_line)))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (ion))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable)))))
==================
Return query with built-in function and bag
==================
SELECT SUM(AVG(n)) FROM <<numbers, numbers>> AS n
--------------------------------
    (source_file
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (function
                (aggfn))))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (value
          (scalar_value
            (keywords
              (function
                (aggfn))))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (collection_value
            (bag_value
              (bag_punc_start)
              (bag_list
                (value
                  (scalar_value
                    (variable)))
                (bag_punc_separator)
                (value
                  (scalar_value
                    (variable))))
              (bag_punc_end)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable)))))
==================
Return query with PIVOT and UNPIVOT
==================
SELECT VALUE (PIVOT v AT g
              FROM UNPIVOT r as v At g
              WHERE g LIKE 'co%')
FROM sensors AS r
-------------------------------
   (source_file
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (string))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable)))))
==================
Return query with tuple and array
==================
SELECT x.*
FROM [{'a':1, 'b':1}, {'a':2}, 'foo'] AS x
-------------------------------
    (source_file
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (collection_value
            (array_value
              (array_punc_start)
              (array_list
                (value
                  (tuple_value
                    (tuple_punc_start)
                    (colon_pair_list
                      (colon_pair
                        (value
                          (scalar_value
                            (string)))
                        (pair_punc_separator)
                        (value_list
                          (value
                            (scalar_value
                              (number)))))
                      (tuple_punc_separator)
                      (colon_pair
                        (value
                          (scalar_value
                            (string)))
                        (pair_punc_separator)
                        (value_list
                          (value
                            (scalar_value
                              (number))))))
                    (tuple_punc_end)))
                (array_punc_separator)
                (value
                  (tuple_value
                    (tuple_punc_start)
                    (colon_pair_list
                      (colon_pair
                        (value
                          (scalar_value
                            (string)))
                        (pair_punc_separator)
                        (value_list
                          (value
                            (scalar_value
                              (number))))))
                    (tuple_punc_end)))
                (array_punc_separator)
                (value
                  (scalar_value
                    (string))))
              (array_punc_end)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable)))))
==================
Return query with bag and tuple
==================
SELECT VALUE {v.a: v.b, v.c: v.d}
FROM <<{'a':'same', 'b':1, 'c':'same', 'd':2}>> AS v
WHERE v.b
-------------------------------
    (source_file
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (tuple_value
            (tuple_punc_start)
            (colon_pair_list
              (colon_pair
                (value
                  (scalar_value
                    (variable)))
                (pair_punc_separator)
                (value_list
                  (value
                    (scalar_value
                      (variable)))))
              (tuple_punc_separator)
              (colon_pair
                (value
                  (scalar_value
                    (variable)))
                (pair_punc_separator)
                (value_list
                  (value
                    (scalar_value
                      (variable))))))
            (tuple_punc_end))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (collection_value
            (bag_value
              (bag_punc_start)
              (bag_list
                (value
                  (tuple_value
                    (tuple_punc_start)
                    (colon_pair_list
                      (colon_pair
                        (value
                          (scalar_value
                            (string)))
                        (pair_punc_separator)
                        (value_list
                          (value
                            (scalar_value
                              (string)))))
                      (tuple_punc_separator)
                      (colon_pair
                        (value
                          (scalar_value
                            (string)))
                        (pair_punc_separator)
                        (value_list
                          (value
                            (scalar_value
                              (number)))))
                      (tuple_punc_separator)
                      (colon_pair
                        (value
                          (scalar_value
                            (string)))
                        (pair_punc_separator)
                        (value_list
                          (value
                            (scalar_value
                              (string)))))
                      (tuple_punc_separator)
                      (colon_pair
                        (value
                          (scalar_value
                            (string)))
                        (pair_punc_separator)
                        (value_list
                          (value
                            (scalar_value
                              (number))))))
                    (tuple_punc_end))))
              (bag_punc_end)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable)))))
==================
Return query with CROSS JOIN and UNPIVOT
==================
SELECT u.id, feedbackId, commentId, upvoteId
FROM users as u, u.feedbacks as feedback at feedbackId
LEFT CROSS JOIN feedback.comments as comment AT commentId
LEFT CROSS JOIN UNPIVOT comment.upvotes as upvote at upvoteId
-------------------------------
    (source_file
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable)))))
==================
Return query with CROSS JOIN, UNPIVOT and subquery
==================
SELECT (
        SELECT numRec, tabulated
        FROM committed.changes changes,
          (SELECT u.id, feedbackId, commentId, upvoteId
            FROM changes.tabulated as u,
            u.feedbacks as feedback at feedbackId LEFT CROSS JOIN feedback.comments as comment AT commentId
            LEFT CROSS JOIN UNPIVOT comment.upvotes as upvote at upvoteId
          ) as tabulated,
          changes.numRec as numRec
        )
    AS changes
    FROM incoming_committed committed
-------------------------------
    (source_file
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable)))))
==================
Return query with GROUP BY and built-in function
==================
SELECT attributeId, COUNT(*) as the_count
FROM repeating_things
GROUP BY attributeId GROUP AS g
HAVING 1 = 0
-------------------------------
    (source_file
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (function
                (aggfn))))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (value
          (scalar_value
            (operator))))
      (states
        (value
          (scalar_value
            (operator
              (punctuation)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (variable))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (keywords
              (keyword)))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (number))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (operator))))
      (states
        (whitespace))
      (states
        (value
          (scalar_value
            (number)))))